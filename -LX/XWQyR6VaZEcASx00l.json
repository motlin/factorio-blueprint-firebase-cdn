{
  "title": "Supply Grid - Request Items with trains! Vanilla! No bots!",
  "favorites": {
    "bLSNBxaDOhgPGALrThBBVL7PoVK2": true,
    "ge61ee0MGiaYXODzS4vQanEyhtV2": true,
    "SS0ivWSelScggoritSCjMW2VOo32": true,
    "YCoq1dmol2PqbBesaSd8AtphsNt1": true,
    "Y6PiIIHKMKhcVb1dI9gwdhVZfkl2": true,
    "w8u5XX28eBhMjmdcJ3UaxNPB41i2": true,
    "zRZ569azMxcT2b0Fbw8qkJaBQyl1": true,
    "qZeMchEZzuXWhCGlg2v1wo4vcpz1": true,
    "l4zqQg8BKAXEwR3edqdEcP6dH463": true,
    "awtIejV1kpQZI4G2V5T2efVQF4g2": true,
    "J1lFJ3vNJ4WduT9xNE0Tpv3WiOC3": true,
    "uXdDMNM8THhhGHdiUwePmSn5GlE3": true,
    "8v7NYQlRARPkI4QCk84HBkScqgC2": true,
    "a84jkpdudMTUnKUjgl07kL4Nd5H3": true,
    "kuWVNkbeg9VouOwBl543WmcSi2o2": true
  },
  "createdDate": 1548914900945,
  "descriptionMarkdown": "Supply Grid\n===\n\n[Reddit post / Video](https://www.reddit.com/r/factorio/comments/daeorp/vanilla_train_only_multiplexed_supply_grid_any/)\n\nIt's a doubly time-multiplexed global, train based item requester system!\n\nFor what?\n---\n**Restocking outposts with ammo/repair packs/fuel/bots (or any item) and keeping them loaded with a set amount of them without adding extra trains and messing with train routing.**\n\nDo you want to supply your outposts easily? Just put a **terminal** down, set a **channel**, set an available **id** and set the items you need in the requester combinator, a train will shortly come to you with all the item's your outpost needs. \n\n> ###### Only restocks a station if it's supply is below a user defined percentage so it won't do unnecessary 1 item deliveries.\n\nUsage\n---\n### Set up a central repository using the **Bay** blueprint.\n- Each **bay** has to have it's `B` value set to a unique number, preferably starting from 1.\n- Each **bay**'s station has to be named by this `B` value. (Example station name: Bay 7)\n- Each **bay**'s Big electric pole has to connect to a global green grid (every **terminal** and **bay** has to be connected together with green cables)\n- Each **bay** can load items separately, the convenient solution is running belts under them. (You can put buffer chests before the loading inserters to speed up loading)\n- Each **bay** represents a single **channel**, each channel can only have **1** train. (That's why we using multiply channels)\n- Each **train** will have the same route for each **bay**\n  - Bay X - leave when `green > 0`\n  - Terminal X - leave when `inventory empty` (or inactivity, it's up to you)\n \n### Set up a single **MUX** somewhere on the global green grid, and configure it! **You'll might have to update it's configuration later!**\n(the **MUX** blueprint can fit around a single Big Electric Pole, you can put it anywhere)\n\n- The **MUX** has a `T` value. Don't touch it, it has to be 1.\n- The **MUX** has a `M` value (M as Modulo)  This determines how many station can fit into a single channel which is **M - 2** because a terminals id can't be 0 and a multiple of `M`\n- The **MUX** has a `N` value which determines how many channels there are.\n- The **MUX** has an `S` value which determines the speed of the iteration. The lower the faster. `S` value 1 means that the a **MUX** tick for each in-game tick. (Note that the system can't operate on a low `S` value. As the system needs multiple in-game ticks to process a **MUX** tick. The default `S` value is 6. I've seen errors at 5. (The error is that the bay is unable to save the request, thus it's doing nothing, changing `S` back to 6 solves this immediately)\n\nExample configuration:\nYou have 7 channels and while most of them uses 4-5 terminals one of them uses 9. So your `M` is 11 (max terminal in a channel + 2) and your `N` is 7.\n\n> ###### Reading all the inputs will happen faster if you try to keep these values down, you can always check how many ticks is needed to rotate through all the terminals in the **MUX** because it calculates an `L` (as in limit) signal which is the upper limit of ticks in one rotation (and multiply it by 6 because processing a \"tick\" takes multiple real in-game ticks), so in the previous example it would take 11 * 7 = 77; 77 * 6 = 462; 462/ 60 = ~8 seconds to rotate through all of them. Which means that in worst case scenario, when the train gets back into the **bay** it takes at most ~8 seconds to receive it's next request and start loading.\n\nNote that both `N` and `M` can be larger than what you currently need, and smaller than what you've set up (those stations that are \"out of bounds\" will simple be ignored)\n\n### Set up **terminals**\n\nThese will be at your outposts. It has two configurable values, and a request panel.\n\n- The `C` value is the **channel** this **terminal** is on. It will receive it's items from the **bay** on the same channel\n- The `I` value is the if of the **terminal** within the **channel**. It only has to be unique within the **channel**.\n- The `P` value is a percentage. It means that the **terminal** won't request for another supply until the total item count in the buffer is below `P` percentage of the requested items.\n\nThere is a constant combinator near the boxes where you can set what items you need.\n\nThere is an [extra dev version with comments, the blueprint can be found here](https://pastebin.com/iDa1R0RC), it's not in the blueprint book because it uses modded items for the comments. The mod you need (not really necessary needed to import but the purpose of this dev version is the comments, and you can only ready them with this mod) is [Attach Notes](https://mods.factorio.com/mods/321freddy/attach-notes)\n\nThere is another [extra blueprint for the screnario](https://pastebin.com/AnbtANZ0) (The one shown in the video / screenshot) \n\nNote: Sadly there is a bunch of signals bleeding to the global green grid, it doesn't mess up with this contraption but if you use other signals on a global grid you might want to know about these `P` `I` `T` `F` `W` `E` `1` `K` `M` `J`, and if there is a request, that as a negative value.\n\nIf you have any improvements pm me on [reddit](https://www.reddit.com/user/AlexAegis) I'll update the blueprint, but as for now I consider this as finished.",
  "image": {
    "id": "pwm8W5T",
    "type": "image/jpeg",
    "width": 2638,
    "height": 1798
  },
  "lastUpdatedDate": 1569669293786,
  "numberOfFavorites": 17,
  "author": {
    "userId": "1mWNpXvBKWel5dpejdaG7pdDQbs2"
  },
  "authorId": "1mWNpXvBKWel5dpejdaG7pdDQbs2",
  "blueprintString": "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",
  "fileName": "supply grid.jpg",
  "tags": {
    "3": "/train/unloading station/",
    "0": "/mods/vanilla/",
    "1": "/version/0,16/",
    "2": "/train/loading station/"
  }
}
