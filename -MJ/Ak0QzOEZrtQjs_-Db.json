{
  "author": {
    "userId": "7s6qRMBOkySwPjB3fvPIBY3dlnP2"
  },
  "authorId": "7s6qRMBOkySwPjB3fvPIBY3dlnP2",
  "blueprintString": "0eNrNWttu2zgQ/RWBj7t2IJK6GosCTbYPizbFAts+LQpDlpmEqG6gpGSNwh+wH9If2y9ZUnZsOSEljuO4fQkiiTya4Zk5M6T8DS2yllWCF818UZZf0ezb/k6NZn/3LtUznpbF5nbNb4skU/eaVcXQDPGG5WiCiiRXV3WZJWJaJQXL0HqCeLFk/6AZXn+ZIFY0vOFsA9NdrOZFmy+YkAO0ABNUlbWcUxbqfQrH9y/8CVqh2ZTEF/56PXmGRGyRojEkaokU4DEkzxZp1DvfFmnUu8ASKRz1LoRzF+iRoh1SkqZt3mZJUwotd1ucUIcSW6IE7hAKdm1hyCAMtoXxB2GILUw4CENtYeJBGA8ePAbKsQ+PHmqACqDho4fZx3POlrzNpyxjaSN4Oq3KjOnw4p1p0kipegXjt3eLshVK64g7of4X3YsiuMCYXI/hCmOAIi7U/SAccl8up+fq3CcYGot6ewk8Fk2uU2gAUS2MB3VMDwPPDGyqieDMcLUwIThgjRZF4IA1QsXQ5dY6R11wHJksohi43DjSwhCgYwYYCo8jg1hTD+pYoIXxj1dYHAIkhgbAVsBgbwhsBQwwEbAVMMDEwFZAD+O9QOd1JBjLnAfVeYO9cJ03hbF3REYYSobngbcbRigfrq4mqACuriaoELzjMEJFcAY7KLl37DaZs96edIKyZCFnz9BfCst5K0SycrC8f89E3YGRCHthTEKPUBr5wX436irjbLe391w0bZL1drjdiOmng+3tBDDzj95MApp53ZtJQTPf9WZ69pvxRPDmLmeNFIW0zBe80KfuVj3dThWWXEgd2TAwQXJhG1Fm8wW7S+65nCxn7FHn8vGyQ6rVgxsu6mZu7dRb5VTNFIYCqptEsSmtLysmko0J6Fc5rWybqoUBywBWthcbVzrrsPpzKxgr+ovGl90rUy7SljfdJekFf3f99LGUSUQUmmDLp1j0cHB3cmLzUjlwPXweYknmY/K569dl71LL3jRQZatP4C+nJXB8yXv8vGTh90VmyVK+ZMIihWwzaIt4gvTZrzxxXVdd51UiOhtn6L9/vx+x+Jcb3GolzWuLZn4jynzOC4mBZjdJVjMANRiSOkRHzHDx+MRzJqyKBn5WNJasTgWvtmH6O1Pus6XTlE6SZeWDkxQOk+i3rEhXTlU+MOHUsllKmZPUTuIskvRrWzn8xum1RbUjVyhzpHESoK4kzTdcYsp0SKWjyS27kMZaH8ZqAm+saB0C6CWjX77sz3Vz6dhYj0nIriHx6Oj5rhUixWOI+0TtSJrWD7xJ73TGbRtUzySNj9G3S8sjsvLqMCufpuQbBKpMni5/rlpXk2cPUnW6/11F6lWLNenVH6PUu1upuTS1YY+5PXT6bSOERB1WqFWm8Q8UQxo8E8PfjpDCq2OlUEtmCKtT1FCYfCAfeMtHeE4+LsfSAE7G55OSob4PPK02Q2wEdl1DAG3XiDq1BPFzqgbus76Bw6/avmnX1oclRviUisN2HWv6weHvXtZUBT+Iqp9mpxQO75SCkxLpDT+O7DIyOrJ8BT9X+Xpzzk7+FOVLJ7Av+NxL8CMxnqF7g67OB1grhi33jf0Pz5a6greNKfXPrCv9Pbz1pPdq0ktLxDVQeKJh4fFHSgIGxi6x5BrDxGVHtHdOcflwKC7eKaTl/UmlJT6RlvR+ZgHrjf1z8nF9+t7446v2xqPpQi3pocd3x+eWxo/67jhWhfnc/TEmMD4CXQM8fJD2bnfS9Wd30nXZnW5ZnawRHfS0+1XiRNb0ht+z+ePQAbz1/8nboec=",
  "createdDate": 1631210969141,
  "descriptionMarkdown": "This circuit was designed to create a system that would connect an isolated power network that uses fuel (steam/nuclear) and connect it to the primary power network that relies on solar power if a certain condition is met.\n\nThe only thing to add is a power grid to provide power to the combinators, but I wanted to leave this up to the player.\n\nThis circuit borrows from a [timer circuit by Yoyo Ma](https://factorioprints.com/view/-LBn3RBaaBPLJ_T1b0rf).\n\n---\n\n##### Overview:\nThe main goal was to have my power network relay primarily on solar power and accumulators, but also wanted to have an alternate power source in case the accumulators ran out of sufficient power. The process introduced several problems as the design progressed.\n\n**Problem 1:** Connecting the backup power to the network directly resulted in accumulators not being used as they should be. This was resolved by first creating a circuit that enabled the power switch when the accumulator fell below a specified percentage.\n\n**Problem 2:** If the only condition for connecting the backup power was the accumulator percentage, the power switch would be enabled/disabled far to often. Basically, the backup power would connect for only a few seconds at a time until the accumulator went above the specified percentage which would almost immediately fall back under creating a \"flicker\" effect.\n\n---\n\nProblem 1 was resolved by introducing the power switch and linked to an decider and accumulator.\n\nProblem 2 was a more difficult to solve. It required that the timer used to solve the first problem would stop counting after the specified time and only reset when conditions were met. The circuit by Yoyo Ma did not do this and reset automatically after every cycle. To fix this, the \"reset\" portion of that circuit was expanded.\n\nTo make everything work, the following requirements were identified:\n1. The timer must automatically stop counting after the specified time limit was reached\n2. The timer must only reset when specified conditions are met\n3. The timer must not reset if in the middle of a current cycle\n\nThe two conditions identified to make the timer reset were:\n* The timer must not be currently active (The current timer count must be greater than the specified threshold)\n* The accumulator must be below a specified percentage\n\n---\n\n#### Configurations\n\nKey Points:\n* The timer counts up every game update using Arithmetic Combinator #1 in increments of +1 on signal A\n* Decider Combinator #2 tells the other devices when the threshold has been met\n* #4 and #5 are grouped to stop the count if #2 sends out a '1' value and adds a '-1' to signal A which stops the count\n* #6, #7, and #8 are grouped to create a logical AND circuit. Which then sends a 1 or 0 to #9\n* #9 will subtract from signal A to reset the timer if the AND circuit conditions are met\n\nDetermined Values:\n* *C* = number of seconds for timer multiplied by 60 (60 ticks per second)\n* *F* = *C* / 4\n* *P* = accumulator percentage required to trigger timer cycle\n\nNote: Formula for *F* is not tested and may require adjustments to make it work properly.\n\nThese variables are indicated by their letter inside square brackets ( ```[C]``` ).  \nAll other letters not in square brackets indicate signal.\n\n#1: Arithmetic Combinator  \nInput: ```A + 1```  \nOutput: ```A```  \n\n#2: Decider Combinator  \nCondition: ```A > [C]```  \nOutput: ```B (1)```  \n\n#3: Decider Combinator  \nCondition: ```A < [C]```  \nOutput: ```C (1)``` \n\n#4: Decider Combinator  \nCondition: ```B > 0```  \nOutput: ```U (1)``` \n\n#5: Arithmetic Combinator  \nInput: ```U * -1```  \nOutput: ```A``` \n\n#6: Decider Combinator  \nCondition: ```L > [P]```  \nOutput: ``` ``` \n\n#7: Arithmetic Combinator  \nInput: ```B * K```  \nOutput: ```M``` \n\n#8: Decider Combinator  \nCondition: ```M > 0```  \nOutput: ```N (1)``` \n\n#9: Arithmetic Combinator  \nInput: ```N * [F]```  \nOutput: ```A``` \n\nPower Switch:  \nEnabled Condition: ```C = 1```\n\nPower Poles: Each power pole connects to their respective power networks.\n\n",
  "fileName": "main-numbered.jpg",
  "image": {
    "height": 744,
    "id": "GdeiVzN",
    "type": "image/jpeg",
    "width": 1193
  },
  "lastUpdatedDate": 1631211078017,
  "numberOfFavorites": 4,
  "tags": {
    "0": "/power/solar/",
    "1": "/power/accumulator/",
    "2": "/circuit/counter/"
  },
  "title": "Automatic Emergency Power Backup",
  "favorites": {
    "67G9TmALSfazXmtaxYMDd9ez8OB3": true,
    "PhX25s1CD6VRwRZxRNqdd3anLAl2": true,
    "wtMvtCtbXmZmSCJDGajyGfgnNIE3": true,
    "0rdpwQPdhgc0RFaRpodeMug1JmO2": true,
    "YbQMY7g77ke3NivaoEw7mTPbh2O2": true
  }
}
