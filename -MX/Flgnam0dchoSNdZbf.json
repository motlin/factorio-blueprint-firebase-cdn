{
  "author": {
    "userId": "OrEvDR6hdqeo2c2NyGGd7cyl2EP2"
  },
  "authorId": "OrEvDR6hdqeo2c2NyGGd7cyl2EP2",
  "blueprintString": "",
  "createdDate": 1617336651344,
  "descriptionMarkdown": "Remote, train-serviced vehicle depot and automated deployer outpost. Useful for remote replenishment and replacement of your roaming vehicle death-squads. Uses the [AAI Programmable Vehicles](https://mods.factorio.com/mods/Earendel/aai-programmable-vehicles) mod by Earendel, current as of mod v0.7.9 for Factorio v1.1.\n\nA train supplies the materials and ammo to the depot, and new vehicles for the garage. New vehicles can be deployed remotely using the circuit network. An integrated Recycle Train station will take care of any accumulated detritus in the depot (with some config).\n\nAn example Resupply train is included in the blueprint.\n\n\n<h3>Usage</h3>\n\nPulse the depot's ID and the vehicle type (NOT it's vehicle ID type) with desired number down the red wire into the large power poles at the top of the print, and the deployer will spit that number of that vehicle out one at a time (assuming the depot stocks that vehicle type). It will wait for you to move the newly deployed vehicle before disgorging the next. \n\nThe depot ID can be found on the depot's Exchange Data combinator.\n\nFor example, [this](https://i.imgur.com/zuGC9rY.png) will deploy 3 AI Laser Tanks.\n\nIf you request a vehicle that the depot does not stock, the request will be ignored (along with any other random signals present on the red wire at the time the request is made). \n\nThe depot will send supply train requests down the green wire on the large poles using __*Vehicle Depot* = 1__ signal. The Resupply train example included in the blueprint has a Schedule that will service the outpost depots as they request resupply.\n\nThe recycle train will be requested on the green wire too, using __R = 1__ signal. \n\n<h3>Configuration</h3>\n<h4>Important - Do This First</h4>\n\nDue to current issues with blueprinting the Depot and Deployer buildings (as of AAI Programmable Vehicles v0.7.9), both the __Vehicle Depot Exchange Data__ and the __Vehicle Deployer Deployed Unit Data__ circuit connections need to be wired by hand when the outpost is first built:\n\n1) Connect a green wire from the bottom-right corner connection on the Vehicle Deployer to the Medium Electric Pole immediately to its left [(example)](https://imgur.com/aQJ1FKP)\n2) Connect a green wire from the top right corner connection on the Vehicle Depot to the Substation immediately below the Roboport [(example)](https://imgur.com/2IOAKY2)\n\nNow the outpost will function as intended.\n\n\n<h4>Add/Change Vehicles</h4>\n\nThe blueprint defaults to supplying AI laser tanks and AI wardens, and their ammo and fuel. There is room for 4 more vehicle types though, to cater for your death-squads' specific requirements. To add more vehicles:\n* Find an empty filter inserter and assign the desired vehicle (from the Logistics tab) to one of the inserter's _Whitelist_ slots\n* Change the inserter's _Enabled condition_ to the desired vehicle and the quantity of that vehicle to fill the storage chest with\n  * See the right-most two filter inserters for examples\n* Open the Storage Chest that the above inserts into and change its _Logistic filter_ to the desired vehicle\n* Set the desired Vehicle Unit Data on one of the unused constant combinators to the right of the radar\n  * If no Unit Data is specified, the vehicle will be deployed with no unit data - not even the vehicle's defaults. You need to explicitly set the combinator to the defaults (or whatever else you want) to have them applied\n* Open the Decider Combinator that is directly connected to the constant combinator you just updated and set its blank _Condition_ value to the desired vehicle, eg change from _(Blank) > 0_  to _AI Laser Tank > 0_\n  * See the right-most two constant- and decider combinators for examples\n\n<h4>Stored Items</h4>\n\nMinimum stored item amounts can be modified using the constant combinator just above the track in between the two stations.\nDesired stored item amounts are set on the stack filter inserters that pull from the carriage. \n\n<h4>Vehicle Depot Trash Recycling</h4>\n\nThe Vehicle Depot can be set to pull detritus from Wardens (eg stones, coal etc) by setting the desired item values to say 15k in the depot's _Vehicle Depot Exchange Data_ combinator.\n\n<h3>Limitations</h3>\n\n1) DO NOT ROTATE THIS BLUEPRINT. \nSince the Depot and Deployer buildings cannot be rotated, rotating the blueprint will break the deployer and likely disconnect their circuit connections.\n2) Only set one type of vehicle at a time on the red wire (eg AI Laser Tank), along with the depot ID. Setting more than one stocked vehicle type (i.e. AI Laser Tank and also AI Warden) will do strange things to their unit data and not give the desired results.\n3) There isn't much built-in capacity for different ammunition types. If you want to stock more than 5 ammo/equipment types to resupply you vehicles with, you will need to modify the print.",
  "fileName": "Garage Blueprint.png",
  "image": {
    "height": 965,
    "id": "sdu12AZ",
    "type": "image/jpeg",
    "width": 1288
  },
  "lastUpdatedDate": 1617341259780,
  "numberOfFavorites": 1,
  "tags": {
    "0": "/mods/aai/",
    "1": "/version/1,0/"
  },
  "title": "AAI Remote Garage and Depot Outpost",
  "favorites": {
    "lWWxmthVwxSm3udBoe8rRoLC4mz2": true
  }
}
