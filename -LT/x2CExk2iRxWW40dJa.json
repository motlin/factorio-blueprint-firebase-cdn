{
  "favorites": {
    "jUpWwmrWkmbaVl9qXGW0Kf5Qfs92": true,
    "qAjgnz93SrP0jkW7kWJcIprw3pm1": true,
    "msDA0cm5jihnsZguH93t6kygfR12": true,
    "ysRkcAmWybbzslOyFrQZKUoSAAp2": true,
    "UD2CetSyLQVN8f4GlMKliAt0Zw62": true,
    "WQl3kVGX5AcTDIThs5isZDCROTC2": true,
    "7Odd6FGBTHXF3fFLgB7AeDwPTKn1": true,
    "SS0ivWSelScggoritSCjMW2VOo32": true,
    "lPAGQnakt4aD7yADsKnlVTFsvL82": true,
    "qxdPChVG9kYAkr9QXgJy5xrw5ns2": true,
    "a2h8No2iDUXIQICEm4LI4Fnk7Zm1": true,
    "8ykp14LWlVUEgtFE9QcnxkIzRSi2": true,
    "MkmW7Y6bxPdvWHbkq5oxrZTjjrw1": true,
    "z2nrljOr5uYxYxSq5GYiug4AJF22": true,
    "esvNuxWxJlfpeJRdIUYJRq0Uiwa2": true,
    "d1eirclhnvebxnyo3ZftXnrtkJR2": true,
    "6PonYNhVO4SkExbWRA4SLnNmEpX2": true,
    "ORN6ns9u6FOASvMvXw7EdtcqAz82": true,
    "EjwfRyEEELMEaOQN4DRpcDIWfTw2": true,
    "74o0ZKGnlIQqNsi2aPwnxTVeIci2": true,
    "Y6PiIIHKMKhcVb1dI9gwdhVZfkl2": true,
    "GhZ6OynKe9dfqjprzvE8MEU2s0A2": true,
    "eDWeDoMgXhZ8FCOgfPGShj5B8Jo2": true,
    "rxAqLQJLSQXJF0sINOjwLnqgziG3": true,
    "msYFYAuiXEQJOltWblMV51DJLYk1": true,
    "cdOwOkp1PkR1rUgTlJcBuZRrRoc2": true,
    "to2knkQXfSe5jDpViSu6wjbhZJQ2": true,
    "3nH3IavT18XfUtSJky8ZqAZcYZm2": true,
    "mrc2AeDExTQtRXSRqzqmYSzRsxB2": true,
    "wV6ShTbYLzcQzYHThx2k64g1DV22": true,
    "lz0TQ3Crl8SrqDayUrygr0ygubn1": true,
    "Ybt58soZyTceQKtqt9pPCtzkmtI3": true,
    "USnBr2UUK6PxYt5Uj6BhwpeLXYw2": true,
    "eJvOoTMfUxSqvQEdsYhp6V8XVtj1": true,
    "V0Q4SJK58phP2jEreBbaRbNCWi92": true,
    "cMy9R11g4aQyNd7DuWRDfTtRkHN2": true,
    "PuElJsUlrbVfeRMLi3Qxa8sum7X2": true,
    "KUafRsGImnQqqGD9L0EM5Lcn5CC2": true,
    "fFseOHxSwkRsqGe6mKgm2OAHZGI3": true,
    "Lfpy05C7AaccITL3Rkd8NClrGW82": true,
    "xMUFINAX04XiVyHcTOFAdyrDlUt1": true,
    "RSUniHYhthYrz4WmwrPF5cqg97C3": true,
    "zCiE30GNFqTbwL4H1rnnZ0Kq6Ml2": true,
    "AtPM8cr9kxdMEUvCOKG0oayvYB13": true,
    "FZHxBBhbT9bAqmHIktTOxC8oYim1": true,
    "hr3WZHU9QwYAYWu7PUIKKqEq8Hz2": true,
    "MxFZsq7GliT2fYWN52VaOmcEiGk2": true,
    "gBQrhRXBCuf6w2UwuGTzsDujqu32": true,
    "Fg20VqAmzaMyvEAqaHD7okuA3Yw2": true,
    "8XFUM2ttHogFtNk09RIIZxReDHW2": true,
    "nzJgu2buBnd2SnnZy4qM2Nt7CPC3": true,
    "al8OlOmMgJddK8YA0p1NyFirYuJ3": true,
    "RGuLIEbLmtXmBgc0VDQohmJXUHs1": true,
    "mndnIMKZqsWwGIn8Icbs8kfjleg1": true,
    "cNHrGEyvOOhmOPl8LwqNRnLKiFt1": true,
    "7KMHve2gPYUUIdlSUxeaHdHraxo1": true,
    "ccQqllOeBHcqR6xVw3CDAYmV67D3": true,
    "iknVlssYY1bmK75g45YQCCQvjjE3": true,
    "9gqFDiAFACRKi2dh3ix7mU9I1xt2": true,
    "dP40ibfZhCPD0i9fEo3v8xeU1AC2": true,
    "HCHPmUGeZgNcpvrxwhmbHrCBz0h2": true,
    "tQSpUW2HI7ac9uWHnn56coKvK4F3": true,
    "KwOnm7ZkjvhJ1NwCHMebf5hTXq23": true,
    "jolhWww0d6aZyeaddAIWkj7gIe53": true,
    "xQ09HoWjWRVs9CuesANu4Bthx5g1": true,
    "PMtka9hzl8cxjPJjZrJc6OLMBK73": true,
    "V19tmhs15fZTlKjsLMzoKdAr8DG3": true,
    "rbPyJKUVm0MITtMrWfEKfs6Pvj93": true,
    "KHYeyqAvq0aTJLImH1gW3sG4atB3": true,
    "s5KhWKIJu3QfhBoJpHqLzNFIWE63": true,
    "AMCmV5PYMJPGfhNVvqzkLklHRqe2": true,
    "S9zynn44owNsZ18RMAHVn3o8Fgy1": true,
    "chZ2tb6IrkRVFI3IuHQqemil8h62": true,
    "yGwkXhnSoeMpHoZhkjrY7JU02ul1": true,
    "cjhiFdbiUIX4VtXXSDAfCsWxwKw2": true,
    "QS2skONag6hP8YsgsqYDJsH32Y93": true,
    "vS4w3mP05QN90J6dRgW46XpPPl02": true,
    "8BIgihRfQuSPH60G4RohF4NQ6a52": true,
    "YY7MjrW8UKewDHdc9kQ1McG9dq23": true,
    "mpjFzFM9UUQuYlqjL5imsV59NZ62": true,
    "rREc7Udv6DUsHBMap2Xwd8JWkTi1": true,
    "Mf0tOnzZ31MeQK9X7TYxJXymSCk2": true,
    "zaLj9rmofGMt2UROshSvrAR6yrO2": true,
    "51IVHPXOTEa3lGpZvrsCglEfJII3": true,
    "ci1eK893dCOZntxKqh6dPmUeFeA3": true,
    "oob73QXT5NYMxBMPtHFrkDBxpij1": true,
    "mbLmglbT83hEeAqkUT1CL506V9X2": true,
    "mTHT5L8629Pl1zsHBd7nefEL7rT2": true,
    "gDgX4de49wbL7ASlahMaidkarNG3": true,
    "H7zNHe9OQscuRsEh9aVAMjTZKrT2": true,
    "bkWAmc2dhcZCsTAY8id93S2Xmmt2": true,
    "SkyOTgyK5cbV96j0OlArnODVCJD2": true,
    "iDmfPnsCkNawSyXC2xKrOzkSjdn2": true,
    "1vKFO4FV7DcWicQenktIb6rfSgG3": true,
    "424jNGDhcmMUZYc5dYXtvzkJRw62": true,
    "NYTD14WyI3NLCz0F5i6FMR4tpm43": true,
    "FZBtFEpS13N87hKr26AjNJlgda92": true,
    "KivVYvRQTXP0gNOAKEtU9HSNJZ52": true,
    "ze3sqYEPFlNpM6IudWZDxD7ag2x1": true,
    "J7pt1240XPUmQHCuvVDTdtp0Hht1": true,
    "bLPjHaWTryXti4G188JW0wl1Hsx2": true,
    "CSjv9HKKz5f2aMXGyV4KkENrali2": true
  },
  "blueprintString": "",
  "descriptionMarkdown": "### This rail book contains:\n1. **Provider** and **Requester** Stations & **Depot** to make train logistics much easier.\n1. Simple set of rails (T, straight, corner, U) based on the max spacing of big electric poles (red and green wires already in place).\n\n### Overview\n* Provider/Requester stations broadcast how many train loads of items/fluid are available/needed and the depot dispatches trains.\n* Provider/Requester/Depot stations are dedicated to a single item/fluid type.\n* Trains refuel at depots and depots are refueled by a dedicated train.\n* Made for 1-2 trains (locomotive, cargo, cargo).\n* Right hand drive.\n\n### Why use this rail system?\n* You'll be able to add/remove Provider/Requester stations without editing train schedules.\n  * This is especially helpful for things like iron and copper ore.\n* Hovering over any big electric pole in the rail system shows how many train loads are available (green) and needed (red).\n  * This makes it easy to find the bottleneck (do I need more copper mines? or more smelters? etc.).\n* Provider/Requester stations are only enabled when another train needs to come to the station.\n  * This means your more distant stations will be served instead of having a traffic jam at the closest station.\n* Provider/Requester/Depot station setup is easy (just set constant combinator output to select item/fluid type).\n  * Stations requiring configuration use a speaker (silent) to explain what to do (until it's configured).\n\n### Setup\n#  \n#### Basics:\n* When placing rail/stations, overlap an existing big electric pole in the rail system.\n\n#  \n#### Provider Station:\n* Change station name from \"? Provider\" to \"Red Circuit Provider\" (or whatever item/fluid the station will be providing).\n\n#  \n#### Requester Station:\n* Change station name from \"? Requester\" to \"Red Circuit Requester\" (or whatever item/fluid the station will be requesting).\n* Set the constant combinator to output *Advanced Circuit = 1* (or whatever item/fluid the station will be requesting).\n#  \n\n#### Depot Station:\n* Change station name from \"? Depot\" to \"Red Circuit Depot\" (or whatever item/fluid the trains using the depot will be carrying).\n* Set the constant combinator to output *Advanced Circuit = 1* (or whatever item/fluid the trains using the depot will be carrying).\n* Place a 1-2 train in the depot's stacker (must start in stacker or depot will miscount how many trains are currently deployed).\n* Train schedule:\n  1. **Red Circuit Depot** *until* 1 second of inactivity.\n  1. **Red Circuit Provider** *until* full cargo *or* 30 seconds passed.\n  1. **Red Circuit Requester** *until* empty cargo *or* 30 seconds passed.\n  * Obviously replacing \"Red Circuit\" with whatever item/fluid the train will be carrying.\n* Add a little fuel and set train to automatic.\n#  \n\n#### Refueling:\nTo setup a dedicated train that brings fuel to the depots, use a 1-1 train with the following schedule:\n1. **Fuel Pickup** *until* full cargo.\n1. **Fuel Drop** *until* 5 seconds of inactivity.\n\n* You'll need to build the Fuel Pickup station yourself (no circuitry needed) and set it up to load fuel (coal, rocket fuel, w/e) onto the train. \n* Note: When all the depots have enough fuel, the dedicated refueling train will wait at the Fuel Pickup station.\n#  \n\n### Troubleshooting\n#  \n* One thing that's always worth checking for is an alert with a train station icon to the right of your hotbar. If you see such an alert, hover over it and follow the instructions.\n* Hover your mouse over a big electric pole in the Provider/Requester/Depot's T junction and look at the signals.\n  * If you don't see a signal with a **green** background for the item/fluid, it means the system doesn't think there is a provider station with a full train load of it ready for pickup.\n  * If you don't see a signal with a **red** background for the item/fluid, it means the system doesn't think there is a requester station in need of a full train load of it.\n* Hover your mouse over the decider combinator closest to the depot's stacker with a \"<\" symbol and look at the input signals. \"T\" is the number of trains the depot thinks are deployed and \"I\" is the number of trains the depot thinks should be deployed ideally. If \"T\" is wrong (which can happen if, for example, trains leave the depot and are then removed by a player), you can select the arithmetic combinator in the depot with a \"+\" symbol (there is only one) and right click the output \"T\" to clear it then set it back to \"T\". That will reset the number of trains the depot thinks are deployed back to 0.\n* Select the Provider/Requester/Depot blueprint and hover over an existing Provider/Requester/Depot. If you see any green/red tiles (instead of all blue), it means those tiles are missing/incorrect. Remove any incorrect tiles, place the blueprint again, and place whatever is missing (ghostly green). Remember that placing the blueprint again will reset everything so you'll need to do the Provider/Requester/Depot setup steps again.\n\n#### Problems & solutions from the real world:\n* Problem: Trains aren't leaving my Depot! What's wrong?\n1. Solution: The depot was missing a combinator. To check if this is the problem in your case, select the Depot blueprint and hover over the existing depot. If you see any ghostly green circuitry, you've found your problem.\n1. Solution: The depot's constant combinator wasn't set. If this is the problem in your case, you should be seeing an alert to the right of your hotbar with a train station icon. Hover your mouse over it and follow the instructions.\n* Problem: My Fuel train keeps going to depots that are already full up on fuel.\n1. Solution: Red belts were used instead of yellow belts for the depot's fuel belt so the belt content readers were overwritten.",
  "fileName": "Smart Rail System pic 2.png",
  "imageUrl": "https://firebasestorage.googleapis.com/v0/b/facorio-blueprints.appspot.com/o/Smart%20Rail%20System%20pic%202%20MQ.png?alt=media&token=50a7bdb8-12dc-43b5-8f65-0757aa506cd2",
  "tags": {
    "6": "/train/junction/",
    "0": "/mods/vanilla/",
    "1": "/version/0,16/",
    "2": "/train/right-hand-drive/",
    "3": "/train/track/",
    "4": "/train/loading station/",
    "5": "/train/unloading station/"
  },
  "numberOfFavorites": 118,
  "title": "Smart Rail System",
  "author": {
    "userId": "AGndiU0vcyQxqXhV21WrHnCclJ33"
  },
  "authorId": "AGndiU0vcyQxqXhV21WrHnCclJ33",
  "createdDate": 1545064993770,
  "image": {
    "height": 937,
    "id": "zNPDvW3",
    "type": "image/jpeg",
    "width": 1556
  },
  "lastUpdatedDate": 1585699390051
}
