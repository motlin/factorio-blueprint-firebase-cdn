{
  "image": {
    "height": 896,
    "id": "o3LftNW",
    "type": "image/png",
    "width": 207
  },
  "favorites": {
    "w8u5XX28eBhMjmdcJ3UaxNPB41i2": true,
    "rzQJFqmsMzSg8PPL8pAewgZiLRG2": true
  },
  "authorId": "9afngekgZUbdNYlnfB3QnABtHwB2",
  "blueprintString": "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",
  "createdDate": 1539706491309,
  "fileName": "Facto.png",
  "tags": {
    "2": "/train/loading station/",
    "0": "/train/pax/",
    "1": "/train/right-hand-drive/"
  },
  "title": "Smart Personal Train Station",
  "author": {
    "userId": "9afngekgZUbdNYlnfB3QnABtHwB2"
  },
  "descriptionMarkdown": "What it does:\n- This Station will load the train with the desired ammount of items wich are set up in  the Constant Combinator.\n- If there is more items on the train the filter inserter will unload these unwanted items.\n- No need to set item filters on wagons\n- If the train/wagons get destroyed, just replace it and send it to the Station. The Station will take care of the rest as usual.\n\nWhat you got to do:\n- Set up a train with 1 Train / 5 Wagons ( You can customize it to your needs! works with more or less wagons. just needs to be configured)\n- Add the Station to the trainscedule and \"wait till - everything = 0\" as the requirement to leave\n- EDIT: place down a constantcombinator and hook it up to the red wire + configure as described to your needs\n\nHow it works:\n- The wanted items are added into the constant combinators\n- Type in the desired ammount of each item as a negative (if you want 100 coal you have to put \"-100 coal\" into the combinator)\n- Wire the combinator with the Inserters and the trainstation\n- Set the Station to \"read train contents\"\n- Setup the requests in the chests (1 item for 1 chest)\n- Setup the filter stackinserter - Set filter as the requested item of the chest it is pulling from - Activate Condition \" same item as the filter < 0 \" \n- Setup the filter inserter - overwrite stacksize to 1 - Set filter same as the filter stackinserter is using on the opposite site - Activate Condition \" same item as the filter > 0 \"\n\n [ ( for example. coal < 0 ) with -100 coal in the constant combinator the inserter will start filling the train. The train sends it's contents as a positive signal. As soon as the signal reaches 0 the inserter stops. The filter inserter will remove items one by one if the signal is above 0. Once the Signal all reach 0 the expected items are loaded and the train is free to go. ] \n\nUse:\n- I use a second blueprint (smart outpost kinda) wich I may upload if wanted. Designed for this system to operate correctly and efficient.\n- basically a outpost wich's trainstation turns off if all items wanted are present.\n- it wont turn on again untill a certain amount of any item is left. If an item reaches a \"critical\" amount the Station will turn on again.\n- the train comes in and the inserters only refill the desired items. Station shuts off till next request.\n- all outpost share the same name. So train scedule should be only the \"main station\" and the \"outpost\" wich turns on if items are needed.\n\nFeel free to ask questions and give me your feedback in the comments.",
  "lastUpdatedDate": 1540297840321,
  "numberOfFavorites": 14
}
