{
  "numberOfFavorites": 3,
  "favorites": {
    "AqmwX0N6McbIKCeR8aM0LTTF1wR2": true,
    "Fii0aBQHY1XQpEqw5KEKUxXPz6v1": true,
    "424jNGDhcmMUZYc5dYXtvzkJRw62": true
  },
  "descriptionMarkdown": "##All info you need\n\nSystem works as each inserter check the next box if it has less goods than the box it loads. In that situation, the inserter stop working untill the next box have more goods (+1 is enough). \n\nIt is easy to use, simply copy and paste. \n\nI probably put more combinator than enough, since I've created it for myself I had no effort to make the best one. After all, It works as it must be. (I put my blueprint to save it for later, however it is open for everyone, feel free to use it.)\n\n---------------------------------------------------------\n---------------------------------\n--------------------------\n---------------------\n##This part is only for curious readers, no need to read if you only want to use and nothing else.\n\nHow the system works? First, the box sends it's goods value to the arithmetic combinator. At this step, I needed to convert the box value to a signal (as a term, to a variable) because I want combinators to compare the values, if 2 box sends same value , such as iron ores, then decider combinator will not count them as seperate info, instead it will consider them as one signal/value.  So we need the seperate them by using arithmetic combinator. \n\nNow, what does arithmetic combinator do? It gets the value from the box via cable, now it wants to do arithmetic operation. Since we don't need it, I just made the operation as \"value+0\". In other words, it gets the value info then adds 0 on it, basically does nothing (such as 10+0=10). Next, the arithmetic combinator finishes his math, it wants to send the signal to the receivers (other machines). It sends the signal to the decider combinator. At this point we do this process, for 2 box to 1 decider combinator. In other words, 2 box create 2 diffferent signals via 2 different arithmetic combinator. these 2 signals go for 1 decider combinator. \n\nNow, decider combinator gets 2 different signals, thus 2 different box value, now it does its job. it compares the values. Let's say the first box signal is A and the second one is B. Decider combinator does this: If A is bigger than B, send the signal X. \n\nNow decider combinator compared the values and created the signal X. We send this signal X to the first inserter. First we set the inserter's options as \"Enabled contion: X < 1\". What does the inserter do with this logic. Basically, it stops if it gets signal X. That's all. Now I needed to do same process with every box-inserter with different signals to prevent mixing signals and causing problems. \n\nI'm pretty sure this system takes more process, more land, more combinator than enough. However, it works as it must be. Thanks. ",
  "fileName": "TRAIN SS.png",
  "image": {
    "width": 1207,
    "height": 836,
    "id": "7u2tevc",
    "type": "image/jpeg"
  },
  "createdDate": 1598082099933,
  "lastUpdatedDate": 1598082525864,
  "tags": {
    "0": "/train/loading station/",
    "1": "/mods/vanilla/"
  },
  "title": "Smart Train Loader System 2020",
  "author": {
    "userId": "kEqZIaG4mdUju7YNCVEWA2JV4ny2"
  },
  "authorId": "kEqZIaG4mdUju7YNCVEWA2JV4ny2",
  "blueprintString": "0eNrdWtuOmzAU/JXKr4UK2ySBqOprP6JaRQScXatgkDHbRqv8e21y2wZDfAjiIS+7IsBwPHMug5MPtM0bVkkuFFp/IJ6WokbrXx+o5q8iyc1nal8xtEZcsQJ5SCSFOUokV28FUzz107LYcpGoUqKDh7jI2F+0xgfvLkbGUp4xaQcghxcPMaG44uwYUXuw34im2DKpn3DBqRVjuZ++sVpp8Kqs9T2lMI/VOD710N7809B6cYKl5mRtzmLzR7LsMzrXR0t9JZdpw1V7iA8vh4NZzk0A5BLALqmVz0XNpNInuiGE1xAyLo8RmBV2MekFs2AZbwqf5fpyqVmuypz1Q4e2AEPnAIk9wJYxJct8s2VvyTvXAukbztzoc9kFZcdlrTYdwd+5VI3+5KpVe4X/Ex3lqFViEg+bg6JKZJsEa/QdWRlfXGCUTERdlVL5W5bbVMfnFVlglneyuIMWfFtYCVraCbqiXjmqB0j6vyq4LIVfSmYYqpkB2FyJCjxUVkzT1D4ffdW3lY2qGgD16T4RLb2u5WDy30Ok72zkVi0rYGbTgcSOYKWPAWtdua0mhtY+vl/7OICCEgdQYJskAK4c+yQm0D5EZutDi/t9yM7Hq2RM3KsF0scIhTKCZ2MknJaR2JGRENzaiRUHPiKwFWf8jCBPMCMqLn7DZgR0SHiDadLbSlajZcFPIMue5Xn5ByRMNKxLPKwLDRx1iYZMfUcUAquVE6SbIsMpfdEFaJduuuCPEeKdRk211+tohNrsZFlsuNAYaL1L8podxo9ecqPbstt1T0lg79K9bTkepyueT9dzTcCVPWfEw8qGUyq7GlYWQ6WlfW+vAcgYAjw06TZzzx4c7cs7AnOtASA4x9cVAn27dzD4hAIxAwdM6Et+MJuTpJM6ydtR1Js6CyAh81lrMi0h2JGQJdQSB1aYFRTGaqxJNNbBBU9g4MxeK8i+kWFf3fVn3mCO9Ha7eKwqz2Crj+UFkiUYlgUPyxI62moajLJfwXzu65jQcO91dW0Puy86ofsi0R33tYK5LxL2KYtHKTujrz4VBVzac0o8LCyZUth4WFgSAYVd9AlLQM4VsN1KI1db3XYna3Ajv16yfotCQ6CbdditplDzNt9OMZ7UvIWObpaCzZtdK7B5s+6u0tHm7Rk2RU1NQkwCJYMmwdkExKO+ObPmQTjOUMy4TdeSDB86l2n18NTBE04desdOkBg2dehx6ui+32b++tNvNzyUJ7qgjwXOxZe8TDIuXvXn70zWrWyrFcV4EURhpN/M/gEzwJbz"
}
